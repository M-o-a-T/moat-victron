#!/usr/bin/env python3

import sys
import os
import anyio

from victron.dbus.monitor import DbusMonitor

import logging
logger = logging.getLogger(__name__)

async def main():
	# Init logging
	logging.basicConfig(level=logging.DEBUG)
	logger.info(__file__ + " is starting up")

	# Have a mainloop, so we can send/receive asynchronous calls to and from dbus

	import os
	import sys
	sys.path.insert(1, os.path.join(os.path.dirname(__file__), '../../'))

	dummy = {'code': None, 'whenToLog': 'configChange', 'accessLevel': None}
	monitorlist = {
		'com.victronenergy.solarcharger': {
			'/Dc/0/Voltage': dummy,
			'/Dc/0/Current': dummy,
		},
		'com.victronenergy.battery': {
			'/Dc/0/Voltage': dummy,
			'/Dc/0/Current': dummy,
		},
	}

	async with DbusMonitor(None, monitorlist, None) as d:
		# logger.info("==configchange values==")
		# logger.info(pprint.pformat(d.get_values(['configChange'])))

		# logger.info("==onIntervalAlways and onIntervalOnlyWhenChanged==")
		# logger.info(pprint.pformat(d.get_values(['onIntervalAlways', 'onIntervalAlwaysAndOnEvent'])))

		while True:
			await anyio.sleep(1)
			a = []
			b = []

			# batteries
			for bat in d.get_service_list('com.victronenergy.battery'):
				u = d.get_value(bat, '/Dc/0/Voltage')
				i = d.get_value(bat, '/Dc/0/Current')
				a.append(u)
				b.append(i)

			# chargers
			a.append(None)
			b.append(None)
			for chg in d.get_service_list('com.victronenergy.solarcharger'):
				u = d.get_value(chg, '/Dc/0/Voltage')
				i = d.get_value(chg, '/Dc/0/Current')
				a.append(u)
				b.append(i)

			print(" ".join(f"{x :6.2f}" if x is not None else ":" for x in a))
			print(" ".join(f"{x :6.2f}" if x is not None else ":" for x in b))
			print()


if __name__ == "__main__":
	anyio.run(main, backend="trio")
